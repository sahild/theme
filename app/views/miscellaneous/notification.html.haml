.row.wrapper.border-bottom.white-bg.page-heading
  .col-lg-10
    %h2 Toastr notifications
    %ol.breadcrumb
      %li
        %a{:href => "#{url_for :controller => 'dashboards', :action => 'dashboard_1'}"} Home
      %li
        %a UI Elements
      %li.active
        %strong Toastr notifications
  .col-lg-2
.wrapper.wrapper-content.animated.fadeIn
  .row
    .col-lg-12
      .ibox.float-e-margins
        .ibox-title
          %h5 Toastr examples
          .ibox-tools
            %a.collapse-link
              %i.fa.fa-chevron-up
            %a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
              %i.fa.fa-wrench
            %ul.dropdown-menu.dropdown-user
              %li
                %a{:href => "#"} Config option 1
              %li
                %a{:href => "#"} Config option 2
            %a.close-link
              %i.fa.fa-times
        .ibox-content
          .row
            .col-md-4
              .form-group
                %label{:for => "title"} Title
                %input#title.form-control{:placeholder => "Enter a title ...", :type => "text"}/
              .form-group
                %label{:for => "message"} Message
                %textarea#message.form-control{:placeholder => "Enter a message ...", :rows => "3"}
              .checkbox
                %label.checkbox{:for => "closeButton"}
                  %input#closeButton.input-mini{:checked => "checked", :type => "checkbox", :value => "checked"}>/
                  Close Button
              .checkbox
                %label.checkbox{:for => "addBehaviorOnToastClick"}
                  %input#addBehaviorOnToastClick.input-mini{:type => "checkbox", :value => "checked"}>/
                  Add behavior on toast click
              .checkbox
                %label.checkbox{:for => "debugInfo"}
                  %input#debugInfo.input-mini{:type => "checkbox", :value => "checked"}>/
                  Debug
              .checkbox
                %label.checkbox{:for => "progressBar"}
                  %input#progressBar.input-mini{:checked => "checked", :type => "checkbox", :value => "checked"}>/
                  Progress Bar
              .checkbox
                %label.checkbox{:for => "preventDuplicates"}
                  %input#preventDuplicates.input-mini{:type => "checkbox", :value => "checked"}>/
                  Prevent Duplicates
            .col-md-2
              #toastTypeGroup.form-group
                %label Toast Type
                .radio
                  %label
                    %input{:checked => "checked", :name => "toasts", :type => "radio", :value => "success"}>/
                    Success
                .radio
                  %label.radio
                    %input{:name => "toasts", :type => "radio", :value => "info"}>/
                    Info
                .radio
                  %label.radio
                    %input{:name => "toasts", :type => "radio", :value => "warning"}>/
                    Warning
                .radio
                  %label.radio
                    %input{:name => "toasts", :type => "radio", :value => "error"}>/
                    Error
              #positionGroup.form-group
                %label Position
                .radio
                  %label
                    %input{:checked => "checked", :name => "positions", :type => "radio", :value => "toast-top-right"}>/
                    Top Right
                .radio
                  %label
                    %input{:name => "positions", :type => "radio", :value => "toast-bottom-right"}>/
                    Bottom Right
                .radio
                  %label
                    %input{:name => "positions", :type => "radio", :value => "toast-bottom-left"}>/
                    Bottom Left
                .radio
                  %label
                    %input{:name => "positions", :type => "radio", :value => "toast-top-left"}>/
                    Top Left
                .radio
                  %label
                    %input{:name => "positions", :type => "radio", :value => "toast-top-full-width"}>/
                    Top Full Width
                .radio
                  %label
                    %input{:name => "positions", :type => "radio", :value => "toast-bottom-full-width"}>/
                    Bottom Full Width
                .radio
                  %label
                    %input{:name => "positions", :type => "radio", :value => "toast-top-center"}>/
                    Top Center
                .radio
                  %label
                    %input{:name => "positions", :type => "radio", :value => "toast-bottom-center"}>/
                    Bottom Center
            .col-md-2
              .form-group
                %label{:for => "showEasing"} Show Easing
                %input#showEasing.form-control{:placeholder => "swing, linear", :type => "text", :value => "swing"}/
              .form-group
                %label{:for => "hideEasing"} Hide Easing
                %input#hideEasing.form-control{:placeholder => "swing, linear", :type => "text", :value => "linear"}/
              .form-group
                %label{:for => "showMethod"} Show Method
                %input#showMethod.form-control{:placeholder => "show, fadeIn, slideDown", :type => "text", :value => "fadeIn"}/
              .form-group
                %label{:for => "hideMethod"} Hide Method
                %input#hideMethod.form-control{:placeholder => "hide, fadeOut, slideUp", :type => "text", :value => "fadeOut"}/
            .col-md-3
              .form-group
                %label{:for => "showDuration"} Show Duration
                %input#showDuration.form-control{:placeholder => "ms", :type => "text", :value => "400"}/
              .form-group
                %label{:for => "hideDuration"} Hide Duration
                %input#hideDuration.form-control{:placeholder => "ms", :type => "text", :value => "1000"}/
              .form-group
                %label{:for => "timeOut"} Time out
                %input#timeOut.form-control{:placeholder => "ms", :type => "text", :value => "7000"}/
              .form-group
                %label{:for => "extendedTimeOut"} Extended time out
                %input#extendedTimeOut.form-control{:placeholder => "ms", :type => "text", :value => "1000"}/
          .row
            .col-lg-12
              %button#showtoast.btn.btn-primary{:type => "button"} Show Toast
              %button#cleartoasts.btn.btn-white{:type => "button"} Clear Toasts
              %button#clearlasttoast.btn.btn-white{:type => "button"} Clear Last Toast
              %button#showsimple.btn.btn-white{:type => "button"} Show simple options
          .row.m-t-lg
            .col-lg-12
              %small Toastr Options in JSON
              %pre#toastrOptions.p-m
- content_for :javascript do
  :javascript
    $(function() {
    
        var i = -1;
        var toastCount = 0;
        var $toastlast;
        var getMessage = function () {
            var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
            return msg;
        };
    
        $('#showsimple').click(function () {
            // Display a success toast, with a title
            toastr.success('Without any options', 'Simple notification!')
        });
        $('#showtoast').click(function () {
            var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
            var msg = $('#message').val();
            var title = $('#title').val() || '';
            var $showDuration = $('#showDuration');
            var $hideDuration = $('#hideDuration');
            var $timeOut = $('#timeOut');
            var $extendedTimeOut = $('#extendedTimeOut');
            var $showEasing = $('#showEasing');
            var $hideEasing = $('#hideEasing');
            var $showMethod = $('#showMethod');
            var $hideMethod = $('#hideMethod');
            var toastIndex = toastCount++;
            toastr.options = {
                closeButton: $('#closeButton').prop('checked'),
                debug: $('#debugInfo').prop('checked'),
                progressBar: $('#progressBar').prop('checked'),
                positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                onclick: null
            };
            if ($('#addBehaviorOnToastClick').prop('checked')) {
                toastr.options.onclick = function () {
                    alert('You can perform some custom action after a toast goes away');
                };
            }
            if ($showDuration.val().length) {
                toastr.options.showDuration = $showDuration.val();
            }
            if ($hideDuration.val().length) {
                toastr.options.hideDuration = $hideDuration.val();
            }
            if ($timeOut.val().length) {
                toastr.options.timeOut = $timeOut.val();
            }
            if ($extendedTimeOut.val().length) {
                toastr.options.extendedTimeOut = $extendedTimeOut.val();
            }
            if ($showEasing.val().length) {
                toastr.options.showEasing = $showEasing.val();
            }
            if ($hideEasing.val().length) {
                toastr.options.hideEasing = $hideEasing.val();
            }
            if ($showMethod.val().length) {
                toastr.options.showMethod = $showMethod.val();
            }
            if ($hideMethod.val().length) {
                toastr.options.hideMethod = $hideMethod.val();
            }
            if (!msg) {
                msg = getMessage();
            }
            $("#toastrOptions").text("Command: toastr["
                    + shortCutFunction
                    + "](\""
                    + msg
                    + (title ? "\", \"" + title : '')
                    + "\")\n\ntoastr.options = "
                    + JSON.stringify(toastr.options, null, 2)
            );
            var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
            $toastlast = $toast;
            if ($toast.find('#okBtn').length) {
                $toast.delegate('#okBtn', 'click', function () {
                    alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                    $toast.remove();
                });
            }
            if ($toast.find('#surpriseBtn').length) {
                $toast.delegate('#surpriseBtn', 'click', function () {
                    alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                });
            }
        });
        function getLastToast() {
            return $toastlast;
        }
        $('#clearlasttoast').click(function () {
            toastr.clear(getLastToast());
        });
        $('#cleartoasts').click(function () {
            toastr.clear();
        });
    
    });
